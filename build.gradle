buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.com.github.johnrengelman:shadow:7.1.2"
    }
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'application'

mainClassName = 'gadgetinspector.GadgetInspector'

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.ow2.asm:asm:9.+"
    implementation "org.ow2.asm:asm-commons:9.+"
    implementation "com.google.guava:guava:29.0-jre"
    implementation 'org.slf4j:slf4j-api:1.7.+'
    implementation 'org.slf4j:slf4j-log4j12:1.7.+'

    implementation 'org.apache.httpcomponents:httpclient:4.5.3'
    implementation 'org.apache.httpcomponents:httpmime:4.5.3'
    implementation 'org.apache.httpcomponents:httpasyncclient:4.1.4'
    implementation 'org.jsoup:jsoup:1.10.3'

    if (project.hasProperty("inspectGroup")) {
        implementation "${project.inspectGroup}:${project.inspectName}:${project.inspectVersion}"
    }
}

// The runInspect task will add a library as a dependency (thus pulling in all of its transitive dependencies) and run
// an analysis on the resulting classpath. Example:
//   ./gradlew -PinspectGroup=commons-collections -PinspectName=commons-collections -PinspectVersion=3.1 -PinspectConfig=jserial runInspect
if (project.hasProperty("inspectConfig")) {
    task runInspect(type: JavaExec) {
        classpath = sourceSets.main.runtimeClasspath
        main = "gadgetinspector.GadgetInspector"
        args = ["--config", project.inspectConfig]
    }
}
